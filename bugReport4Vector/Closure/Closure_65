String escaping mishandles null byte
What steps will reproduce the problem? 1. Run:  var x = "\u00003"; if (x.length < 2) { alert("fail"); } else { alert("win"); }  2. Compile and run    What is the expected output? What do you see instead? "win" is expected. "fail" is observed    What version of the product are you using? On what operating system? r1167 on OS x 10.6    Please provide any additional information below. The problem is here: http://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/javascript/jscomp/CodeGenerator.java#1015    Here's a patch that fixes it:  $ svn diff  Index: src/com/google/javascript/jscomp/CodeGenerator.java  ===================================================================  --- src/com/google/javascript/jscomp/CodeGenerator.java (revision 1167)  +++ src/com/google/javascript/jscomp/CodeGenerator.java (working copy)  @@ -1012,7 +1012,7 @@       for (int i = 0; i < s.length(); i++) {         char c = s.charAt(i);         switch (c) {  -        case '\0': sb.append("\\0"); break;  +        case '\0': sb.append("\\000"); break;           case '\n': sb.append("\\n"); break;           case '\r': sb.append("\\r"); break;           case '\t': sb.append("\\t"); break;    You could also lookahead and output "\\000" only if the following char is 0-7 (octal valid) and otherwise output "\\0". Is 2 bytes worth the complexity?