function arguments should not be optimized away
Function arguments should not be optimized away, as this comprimizes the function's length property.    What steps will reproduce the problem?   // ==ClosureCompiler==  // @compilation_level SIMPLE_OPTIMIZATIONS  // @output_file_name default.js  // ==/ClosureCompiler==  function foo (bar, baz) {    return bar;  }  alert (foo.length);  function foo (bar, baz) {    return bar;  }  alert (foo.length);    --------------------------------------    What is the expected output?    function foo(a,b){return a}alert(foo.length);    --------------------------------------    What do you see instead?    function foo(a){return a}alert(foo.length);    --------------------------------------    What version of the product are you using? On what operating system?   I'm using the product from the web page http://closure-compiler.appspot.com/home    I'm using Firefox 3.6.10 on Ubuntu 10.0.4    Please provide any additional information below.   The function's length property is essential to many techniques, such as currying functions.