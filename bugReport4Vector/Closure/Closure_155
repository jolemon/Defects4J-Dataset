Overzealous arguments optimisation
Consider the following JavaScript code:    function d3_call(callback) {    var f = callback;    arguments[0] = this;    f.apply(this, arguments);    return this;  }    This is optimised to:    function d3_call(a){arguments[0]=this;a.apply(this,arguments);return this};    However, the use of a temporary variable `f` is necessary to avoid `arguments[0] = this` from overwriting the first argument.    In the above optimised code, `arguments[0] = this` causes `this` to be assigned to `a`.    Verified on latest SVN r878.    See also: https://github.com/mbostock/d3/issues/closed#issue/68