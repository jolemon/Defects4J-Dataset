initial type of variable wrong when initialize in a "var" statement with type declaration.
The following code doesn't give any warning even though it is an obvious bug:    -------------===============================---------  /**   * @constructor   */  function MyClass() {    this.value = 1;  }    MyClass.prototype.show = function() {    window.console.log(this.value)  }    /**   * @type {MyClass}   */  var x = null;  x.show();  -------------===============================---------    However, if you remove the @type from the var declaration, then closure realizes the problem and warns about x being null rather than an Object.    In any case, since x "can be null", closure should warn about a potential null pointer error, and suggest to guard against the null value, like it does if we try to pass x as an argument where a non-null type is expected. That could be an optional behavior protected behind a flag, but it would definitely help catch lots of errors and write safer code.    I am using the latest closure version available to date, on Ubuntu 13.04, on an amd64 machine.  