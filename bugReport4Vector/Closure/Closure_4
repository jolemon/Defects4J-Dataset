Converting from an interface type to a constructor which @implements itself causes stack overflow.
// Options: --externs externs/es3.js --property_renaming OFF --variable_renaming OFF --jscomp_warning=checkTypes --js=t.js      // File: t.js  /**   * @interface   */  var OtherType = function() {}    /**   * @implements {MyType}   * @constructor   */  var MyType = function() {}    /**   * @type {MyType}   */  var x = /** @type {!OtherType} */ (new Object());    Get Infinite recursion in:    PrototypeObjectType.isSubtype @ 350    Options:    - prevent cycles in the inheritance/implements graph  - detect cycles after they are created and exit compilation before any subsequent passes run  - detect and remove cycles after they are created but before any subsequent passes run  - make every subsequent pass robust against cycles in that graph