Prototypes declared with quotes produce a JSC_USED_GLOBAL_THIS warning.
Compiling the following code (in advanced optimizations with VERBOSE  warning levels):    /** @constructor */  function MyClass() {}  MyClass.prototype["MyMethod"] = function(a) {    this.a = a;  }  window["MyClass"] = MyClass;    Results in the following warning: "dangerous use of the global this  object." This notation is convenient to declare a prototype that is purely  used for export purposes. The warning can be suppressed by using an @this  notation.    Given the following externs:    /**@interface */  function MyParent() {}  /** @param {*} a */  MyParent.prototype.MyMethod = function(a) {}    And the following code:    /**  * @constructor  * @implements {MyParent}  */  function MyClass() {}  MyClass.prototype["MyMethod"] = function(a) {    this.a2 = a;  }  window["MyClass"] = MyClass;    The compiler also produces the waring: "property MyMethod on interface  MyParent is not implemented by type MyClass".