Type checker misses annotations on functions defined within functions
What steps will reproduce the problem? 1. Compile the following code under --warning_level VERBOSE    var ns = {};    /** @param {string=} b */  ns.a = function(b) {}    function d() {      ns.a();      ns.a(123);  }    2. Observe that the type checker correctly emits one warning, as 123   doesn't match the type {string}    3. Now compile the code with ns.a defined within an anonymous function,   like so:    var ns = {};    (function() {      /** @param {string=} b */      ns.a = function(b) {}  })();    function d() {      ns.a();      ns.a(123);  }    4. Observe that a warning is emitted for calling ns.a with 0 parameters, and   not for the type error, as though the @param declaration were ignored.     What version of the product are you using? On what operating system? r15    Please provide any additional information below.   This sort of module pattern is common enough that it strikes me as worth   supporting.    One last note to make matters stranger: if the calling code isn't itself within   a function, no warnings are emitted at all:    var ns = {};    (function() {      /** @param {string=} b */      ns.a = function(b) {}  })();    ns.a();  ns.a(123);  